Copyright (c) 2013 Robert Markwick
See the file license.txt for copying permission

THIS DOCUMENT CONTAINS A LIST OF FUNCTIONS BUILT INTO XPINS

STRING FUNCITONS
PRINT(STR)
	Available in XPINS Parser: 0.9.0
	Description: Displays a string through std::cout
	Arguments: the string you want to display
	Return: NONE
	Dot syntax reccommended: YES, with parentheses

PRINTF(STR,...)
Available in XPINS Parser: 0.12.0
Description: Displays a formatted string
Arguments: the format string and the arguments for the format string
Return: NONE
Dot syntax reccommended: NO


ARRAY FUNCTIONS
SIZE(ARR)
	Available in XPINS Parser: 0.12.0
	Description: gets the size of an array
	Arguments: the array you want the size for
	Return: NUM, the size of the array
	Dot syntax reccommended: YES, no parentheses

RESIZE(ARR,NUM)
	Available in XPINS Parser: 0.12.0
	Description: change the size of an array
	Arguments: the array and its new size
	Return: NONE, the size of the array
	Dot syntax reccommended: YES

TRIGONOMETRY

SIN(NUM)
	Available in XPINS Parser: 0.2.0
	Description: Takes the sine of a given value
	Arguments: The value to take the sine of
	Return: NUM, returns the sine of the value
	Dot syntax reccommended: NO

COS(NUM)
	Available in XPINS Parser: 0.2.0
	Description: Takes the cosine of a given value
	Arguments: The value to take the cosine of
	Return: NUM, returns the cosine of the value
	Dot syntax reccommended: NO

TAN(NUM)
	Available in XPINS Parser: 0.2.0
	Description: Takes the tangent of a given value
	Arguments: The value to take the tangent of
	Return: NUM, returns the tangent of the value
	Dot syntax reccommended: NO

CSC(NUM)
	Available in XPINS Parser: 0.12.0
	Description: Takes the cosecant of a given value
	Arguments: The value to take the cosecant of
	Return: NUM, returns the cosecant of the value
	Dot syntax reccommended: NO

SEC(NUM)
	Available in XPINS Parser: 0.12.0
	Description: Takes the secant of a given value
	Arguments: The value to take the secant of
	Return: NUM, returns the secant of the value
	Dot syntax reccommended: NO

COT(NUM)
	Available in XPINS Parser: 0.12.0
	Description: Takes the cotangent of a given value
	Arguments: The value to take the cotangent of
	Return: NUM, returns the cotangent of the value
	Dot syntax reccommended: NO

ASIN(NUM)
	Available in XPINS Parser: 0.10.0
	Description: Takes the inverse sine of a given value
	Arguments: The value to take the inverse sine of
	Return: NUM, returns the inverse sine of the value
	Dot syntax reccommended: NO

ACOS(NUM)
	Available in XPINS Parser: 0.10.0
	Description: Takes the inverse cosine of a given value
	Arguments: The value to take the cosine of
	Return: NUM, returns the inverse cosine of the value
	Dot syntax reccommended: NO

ATAN(NUM)
	Available in XPINS Parser: 0.12.0
	Description: Takes the tangent of a given value
	Arguments: The value to take the tangent of
	Return: NUM, returns the tangent of the value
	Dot syntax reccommended: NO

ACSC(NUM)
	Available in XPINS Parser: 0.12.0
	Description: Takes the cosecant of a given value
	Arguments: The value to take the cosecant of
	Return: NUM, returns the cosecant of the value
	Dot syntax reccommended: NO

ASEC(NUM)
	Available in XPINS Parser: 0.12.0
	Description: Takes the secant of a given value
	Arguments: The value to take the secant of
	Return: NUM, returns the secant of the value
	Dot syntax reccommended: NO

ACOT(NUM)
	Available in XPINS Parser: 0.12.0
	Description: Takes the cotangent of a given value
	Arguments: The value to take the cotangent of
	Return: NUM, returns the cotangent of the value
	Dot syntax reccommended: NO

ATAN2(NUM Y, NUM X)
	Available in XPINS Parser: 0.2.0
	Description: Gets the base angle given the two legs of a right triangle
	Arguments: the Y and X coordinates, respectively
	Return: NUM, returns the angle
	Dot syntax reccommended: NO

ADDPOLAR(NUM, NUM)
	Available in XPINS Parser: 0.2.0
	Description: Adds two numbers such and reduces the result such that the result is in [0,2PI)
	Arguments: The numbers to be added
	Return: NUM, returns the modified sum of the two numbers
	Dot syntax reccommended: NO
					

MISCILLANEOUS SCALAR MATH OPERATIONS

SQRT(NUM)
	Available in XPINS Parser: 0.10.0
	Description: Finds Square Root of a value
	Arguments: The value to take the square root of.
	Return: NUM, returns the square root of the value
	Dot syntax reccommended: NO

ABS(NUM)
	Available in XPINS Parser: 0.10.0
	Description: Finds Absolute value of A
	Arguments: The value to take the absolute value of.
	Return: NUM, returns the absolute value of A.
	Dot syntax reccommended: NO

FLOOR(NUM)
	Available in XPINS Parser: 0.10.0
	Description: Floors a number to make it an integer
	Arguments: the number you would like to floor
	Return: NUM, returns the result of the flooring
	Dot syntax reccommended: NO

LN(NUM)
	Available in XPINS Parser: 0.10.0
	Description: Evaluates natural log of A
	Arguments: The value to take the natural logarithm of.
	Return: NUM, returns the result of the logarithm
	Dot syntax reccommended: NO

LOG(NUM A, NUM B)
	Available in XPINS Parser: 0.10.0
	Description: Evaluates a logarithm of any base
	Arguments: The value to take the logarithm of and the base of the logarithm, respectively
	Return: NUM, returns the result of the logarithm
	Dot syntax reccommended: NO

DIST(NUM, NUM, NUM)
	Available in XPINS Parser: 0.2.0
	Description: Finds distance between two points given the displacement components
	Arguments: The X, Y, and Z deltas
	Return: sqrt(x^2+y^2+z^2)
	Dot syntax reccommended: NO


READING VECTOR COMPONENTS

X(VEC)
	Available in XPINS Parser: 0.2.0
	Description: Gets the X component for a Vector
	Arguments: The vector for which the X component is desired
	Return: NUM, returns the X component of the vector
	Dot syntax reccommended: YES, no parentheses

Y(VEC)
	Available in XPINS Parser: 0.2.0
	Description: Gets the Y component for a Vector
	Arguments: The vector for which the Y component is desired
	Return: NUM, returns the Y component of the vector
	Dot syntax reccommended: YES, no parentheses

Z(VEC)
	Available in XPINS Parser: 0.8.0
	Description: Gets the Z component for a Vector
	Arguments: The vector for which the Z component is desired
	Return: NUM, returns the Z component of the vector
	Dot syntax reccommended: YES, no parentheses

MAGNITUDE(VEC)
	Available in XPINS Parser: 0.2.0
	Description: Gets the Magnitude (RHO) of a Vector
	Arguments: The vector for which the Magnitude is desired
	Return: NUM, returns the Magnitude of the vector
	Dot syntax reccommended: YES, no parentheses

R(VEC)
	Available in XPINS Parser: 0.8.0
	Description: Gets the Cylindrical R component of a Vector
	Arguments: The vector for which the Cylindrical R component is desired
	Return: NUM, returns the Cylindrical R component of the vector
	Dot syntax reccommended: YES, no parentheses

THETA(VEC)
	Available in XPINS Parser: 0.8.0
	Description: Gets the THETA component of Vector
	Arguments: The vector for which the THETA component is desired
	Return: NUM, returns the THETA component of the vector
	Dot syntax reccommended: YES, no parentheses

PHI(VEC)
	Available in XPINS Parser: 0.8.0
	Description: Gets the PHI component for a Vector
	Arguments: The vector for which the PHI component is desired
	Return: NUM, returns the PHI component of the vector
	Dot syntax reccommended: YES, no parentheses

VECTOR OPERATIONS

PROJECT_ONTO_VECTOR(VEC, VEC)
	Available in XPINS Parser: 0.12.0
	Description: Finds the projection of a vector onto another Vector
	Arguments: The vector that is being projected and the vector being projected onto, respectively
	Return: VEC, returns the projection of one vector onto another vector.
	Dot syntax reccommended: YES
	
UNIT_VECTOR(VEC)
	Available in XPINS Parser: 0.12.0
	Description: Finds the unit vector for a given vector
	Arguments: The vector for which the unit vector is desired.
	Return: VEC, returns the Unit Vector in the direcion of the given vector
	Dot syntax reccommended: YES, no parentheses

ANGLE_BETWEEN_VECTORS(VEC, VEC)
	Available in XPINS Parser: 0.12.0
	Description: Finds the angle between two vectors
	Arguments: The vectors for which you want to find the angle between
	Return: NUM, returns the Angle between the Vectors
	Dot syntax reccommended: NO
	
QUATERNION COMPONENTS

R(QUAT)
	Available in XPINS Parser: 0.12.0
	Description: Gets the Scalar component for a Quaternion
	Arguments: The Quaternion for which the scalar component is desired
	Return: NUM, returns the scalar component of the quaternion
	Dot syntax reccommended: YES, no parentheses

V(QUAT)
	Available in XPINS Parser: 0.12.0
	Description: Gets the vector component for a Quaternion
	Arguments: The Quaternion for which the vector component is desired
	Return: NUM, returns the vector component of the quaternion
	Dot syntax reccommended: YES, no parentheses

MAGNITUDE(QUAT)
	Available in XPINS Parser: 0.12.0
	Description: Gets the Magnitude of a Quatrernion
	Arguments: The quaternion for which the Magnitude is desired
	Return: NUM, returns the Magnitude of the quaternion
	Dot syntax reccommended: YES, no parentheses
	

QUATERNION OPERATIONS

CONJUGATE(QUAT)
	Available in XPINS Parser: 0.12.0
	Description: Finds the conjugate of a quaternion
	Arguments: The Quaternion for which the conjugate is desired
	Return: QUAT, returns the conjugate of A
	Dot syntax reccommended: YES, no parentheses

INVERSE(QUAT)
	Available in XPINS Parser: 0.12.0
	Description: Finds the inverse of a quaternion
	Arguments: The Quaternion for which the inverse is desired
	Return: QUAT, returns the inverse of A
	Dot syntax reccommended: YES, no parentheses


UNIT_QUATERNION(QUAT)
	Available in XPINS Parser: 0.12.0
	Description: Finds the unit quaternion for a given quaternion
	Arguments: The quaternion for whihc the unit quaternion is desired.
	Return: QUAT, returns the Unit quaternion in the direcion of A
	Dot syntax reccommended: YES, no parentheses


ROTATE_VECTOR(VEC,QUAT)
	Available in XPINS Parser: 0.2.0
	Description: Rotates a vector according to a quaternion
	Arguments: The vector and the quaternion
	Return: VEC, returns the rotated vector
	Dot syntax reccommended: YES

	

MATRIX CREATION

ZERO_MATRIX(NUM A, NUM B)
	Available in XPINS Parser: 0.9.0
	Description: Create a Zero Matrix
	Arguments: The number of rows and columns, respecitvely
	Return: MAT, returns a zero matrix of size AxB.
	Dot syntax reccommended: NO
	
IDENTITY_MATRIX(NUM A)
	Available in XPINS Parser: 0.9.0
	Description: Create an Identity Matrix of size A
	Arguments: The number of rows and columns.
	Return: MAT, returns a Identity matrix of size AxA.
	Dot syntax reccommended: NO

ROTATION_MATRIX(NUM A, VEC B)
	Available in XPINS Parser: 0.9.0
	Description: Create an Rotation Matrix of A radians around B
	Arguments: A is the angle the Matrix will rotate a vector, and B is the vector that it should be rotated around
	Return: MAT, returns a Rotation matrix A radains around B.
	Dot syntax reccommended: NO
	
EULER_ANGLE_MATRIX(NUM A, NUM B, NUMC)
	Available in XPINS Parser: 0.9.0
	Description: Create an Rotation Matrix using Euler Angles (roll around X, then pitch around Y, then yaw around z)
	Arguments: A is Roll, B is Pitch, and C is Yaw
	Return: MAT, returns a Rotation matrix from Euler Angles A, B, and C
	Dot syntax reccommended: NO
	
QUATERNION_MATRIX(QUAT A)
	Available in XPINS Parser: 0.9.0
	Description: Create an Rotation Matrix from a Quaternion
	Arguments: A is the Quaternion used to create the Matrix 
	Return: MAT, returns a Rotation matrix based on A
	Dot syntax reccommended: YES, no parentheses
	
	 
MATRIX OPERATIONS

DETERMINANT(MAT)
	Available in XPINS Parser: 0.9.0
	Description: Finds the determinant of a Matrix
	Arguments: The Matrix for which the determinant is desired
	Return: NUM, the Determinant of the Matrix
	Dot syntax reccommended: YES, no parentheses
	
ROW_ECHELON(MAT)
	Available in XPINS Parser: 0.12.0
	Description: Finds the row echelon form of a Matrix
	Arguments: The Matrix for which the row echelon form is desired
	Return: MAT, the row echelon from of the Matrix
	Dot syntax reccommended: YES, no parentheses
	
REDUCED_ROW_ECHELON(MAT)
	Available in XPINS Parser: 0.12.0
	Description: Finds the reduced row echelon form of a Matrix
	Arguments: The Matrix for which the reduced row echelon form is desired
	Return: MAT, the reduced row echelon from of the Matrix
	Dot syntax reccommended: YES, no parentheses

INVERT(MAT)
	Available in XPINS Parser: 0.9.0
	Description: Finds the inverse of a Matrix
	Arguments: The Matrix for which the inverse is desired
	Return: MAT, the inverse of the Matrix
	Dot syntax reccommended: YES, with parentheses

TRANSPOSE(MAT)
	Description: Finds the transposition of a Matrix
	Arguments: The Matrix for which the transposition is desired
	Return: MAT, the transposition of the Matrix
	Dot syntax reccommended: YES, with parentheses
	
APPEND(MAT, MAT)
	Description: Appends one matrix to another
	Arguments: the left and right parts of the matrices, respectively. Must have same height
	Return: MAT, [A|B]
	Dot syntax reccommended: YES



PROBABILITY: RANDOM VALUES

RV_BERNOULLI(NUM)
	Available in XPINS Parser: 0.9.0
	Description: Generates a True or False from an Bernoulli Random Variable
	Arguments: The probability that the number is one.
	Return: BOOL, TRUE if the random variable is 1 and FALSE if it is zero
	Dot syntax reccommended: NO

RAND(NUM lower, NUM upper)
	Available in XPINS Parser: 0.2.0
	Description: Generates a random number from a Uniform Random Variable
	Arguments: The lower and upper bounds, respectively.
	Return: NUM, returns a random number between A and B
	Dot syntax reccommended: NO

RV_NORMAL(NUM mean,NUM stdDev)
	Available in XPINS Parser: 0.10.0
	Description: Generates a random number from a Normal Random Variable
	Arguments: The Mean and the Standard Deviation, respectively
	Return: NUM, the Random Number
	Dot syntax reccommended: NO

RV_EXP(NUM)
	Available in XPINS Parser: 0.9.0
	Description: Generates a random number from an Exponantial Random Variable
	Arguments: The Parameter for the Exponential distribution
	Return: NUM, the Random Number
	Dot syntax reccommended: NO
	
RV_POISSON(NUM)
	Available in XPINS Parser: 0.9.0
	Description: Generates a random number from an Poisson Random Variable
	Arguments: The Parameter for the Poisson distribution
	Return: NUM, the Random Number
	Dot syntax reccommended: NO
	

PROBABILITY: EXPERIMENTS:

COIN_FLIP(NUM p, NUM n)
	Available in XPINS Parser: 0.11.0
	Description: Simulates flipping of n coins of bias p
	Arguments: p is the probability of heads for a given flip. n is the number of flips.
	Return: NUM, total number of heads
	Dot syntax reccommended: NO

DICE_ROLL(NUM n, NUM r)
	Available in XPINS Parser: 0.11.0
	Description: Rolls r n-sided dice
	Arguments: n is the number of sides, r is the number of rolls.
	Return: NUM, total values from the dice rolls
	Dot syntax reccommended: NO

PROBABILITY: MARKOV CHAINS:

MARKOV_SIM(MAT chain, NUM steps, NUM start)
	Available in XPINS Parser: 0.11.0
	Description: Simulates multiple transitions in a Markov Chain
	Arguments: The transition probability Matrix (column in row out), The number of steps, and the starting state
	Return: NUM, a random stage weighted on probability of being in that state after B steps
	Dot syntax reccommended: YES

MARKOV_PROB(MAT chain, NUM n, NUM start, NUM end)
	Available in XPINS Parser: 0.11.0
	Description: Calculates n-Step transition Probability
	Arguments: the transition probability Matrix,  the number of steps, the starting state, and the desired end State
	Return: NUM, probability fo being in the desired end state after n steps.
	Dot syntax reccommended: YES
	
MARKOV_STEADYSTATE(MAT chain, NUM x)
	Available in XPINS Parser: 0.11.0
	Description: Calculates Steady-State Probability
	Arguments: the transition probability Matrix and the end state
	Return: NUM, probability fo being in state x after a long time.
	Dot syntax reccommended: YES

MARKOV_REACHABLE(MAT chain, NUM end, NUM start)
	Available in XPINS Parser: 0.11.0
	Description: Determines if an end state is reachable from a given start state
	Arguments: the transition probability Matrix, the desired end state, and the initial state
	Return: BOOL, TRUE if and only if the end state can be arrived at given the initial state
	Dot syntax reccommended: YES

MARKOV_ABSORB_PROB(MAT chain, NUM end, NUM start)
	Available in XPINS Parser: 0.11.0
	Description: Calculates Steady-State Probability given an initial state
	Arguments:  the transition probability Matrix,the absorbing state, and the initial state
	Return: NUM, probability fo being in the end state after a long time.
	Dot syntax reccommended: YES

MARKOV_ABSORB_TIME(MAT chain, NUM end, NUM start)
	Available in XPINS Parser: 0.11.0
	Description: Calculates Expected Absorbtion time for a given state
	Arguments: the transition probability Matrix, the absorbing state, and the initial state
	Return: NUM, Expected time to reach the end state from the given start state.
	Dot syntax reccommended: YES
	
MARKOV_ABSORB_SIM(MAT chain, NUM end, NUM start)
	Available in XPINS Parser: 0.11.0
	Description: Simulates Absorbtion time for a given state
	Arguments: the transition probability Matrix, the absorbing state, and the initial state
	Return: NUM, a possible time to reach the end state from the given start state.
	Dot syntax reccommended: YES

POLYNOMIAL OPERATIONS:

EVALUATE(POLY,NUM...)
	Available in XPINS Parser: 0.12.0
	Description: Evaluates the polynomial with specific variable values
	Arguments: the Polynomial and the variable values.
	Return: NUM, the result of the evaluation
	Dot syntax reccommended: YES

VECTOR_EVALUATE(FIELD,NUM...)
	Available in XPINS Parser: 0.12.0
	Description: Evaluates the Vector Field with specific variable values
	Arguments: the Vector Field and the variable values.
	Return: VEC, the result of the evaluation
	Dot syntax reccommended: YES


CALCULUS:

DERIVE(POLY,NUM)
	Available in XPINS Parser: 0.11.0
	Description: Takes the derivative of a polynomial with respect to a particular variable;
	Arguments: Polynomial to derive and the index of the Variable
	Return: POLY, the Derivative
	Dot syntax reccommended: YES
	
INTEGRATE(POLY, NUM)
	Available in XPINS Parser: 0.11.0
	Description: Computes the indefinite integral of a polynomial with respect to a particular variable;
	Arguments: Polynomial to integrate and the index of the Variable
	Return: POLY, the Integral
	Dot syntax reccommended: YES

LINE_INTEGRAL(POLY, FIELD, POLY, POLY)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Line integral of a Polynomial
	Arguments: the Polynomial (in terms of X,Y,Z, and T), the curve (in terms of U and T), and starting and stopping U bounds (in terms of T)
	Return: POLY, the result of the line integral
	Dot syntax reccommended: YES

SURFACE_INTEGRAL(POLY, FIELD, POLY, POLY, POLY, POLY)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Surface integral of a Polynomial
	Arguments: The Polynomial (in terms of X,Y,Z, and T), the surface (in terms of U,V and T), the starting and stopping U bounds (in terms of T), and the starting and stopping V bounds (in terms of U and T)
	Return: POLY, the result of the Surface integral
	Dot syntax reccommended: YES

VOLUME_INTEGRAL(POLY, FIELD, POLY, POLY, POLY, POLY, POLY, POLY)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Volume integral of a Polynomial
	Arguments: The Polynomial (in terms of X,Y,Z, and T), B is the map vector (in terms of U,V,W and T),the starting and stopping U bounds (in terms of T),the starting and stopping V bounds (in terms of U and T), and the starting and stopping W bounds (in terms of U,V, and T)
	Return: POLY, the result of the volume integral
	Dot syntax reccommended: YES

COMPONENT_DERIVE(FIELD A,NUM B)
	Available in XPINS Parser: 0.11.0
	Description: Takes the derivative of A with respect to the variable at index B;
	Arguments: A is the Vector Field, B is the index of the Variable
	Return: FIELD, the Derivative
	Dot syntax reccommended: YES
	
COMPONENT_INTEGRATE(FIELD A, NUM B)
	Available in XPINS Parser: 0.11.0
	Description: Finds the Integral of A with respect to the variable at index B;
	Arguments: A is the Vector Field, B is the index of the Variable
	Return: FIELD, the Indefinite Integaral
	Dot syntax reccommended: YES
	

VECTOR CALCULUS:

GRADIENT_VECTOR(POLY)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Gradient of a polynomial
	Arguments: The Polynomial to find the gradient vector for
	Return: FIELD, the Gradient Vector Field of the given polynomial
	Dot syntax reccommended: YES, no parentheses

DIVERGENCE(FIELD)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Divergence of A
	Arguments: The vector field to find the divergence for
	Return: POLY, the Divergence of the given vector field
	Dot syntax reccommended: YES, no parentheses

CURL(FIELD)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Curl of a vector field
	Arguments: The Vector Field to find the curl for
	Return: FIELD, the Curl of the given vector field
	Dot syntax reccommended: YES, no parentheses

LINE_INTEGRAL(FIELD, FIELD, POLY, POLY)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Line integral of a Vector Field
	Arguments: the Vector Field (in terms of X,Y,Z, and T), the curve (in terms of U and T), and starting and stopping U bounds (in terms of T)
	Return: POLY, the result of the line integral
	Dot syntax reccommended: YES

SURFACE_INTEGRAL(FIELD, FIELD, POLY, POLY, POLY, POLY)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Surface integral of a Vector Field
	Arguments: The Vector Field (in terms of X,Y,Z, and T), the surface (in terms of U,V and T), the starting and stopping U bounds (in terms of T), and the starting and stopping V bounds (in terms of U and T)
	Return: POLY, the result of the Surface integral
	Dot syntax reccommended: YES
