Copyright (c) 2013 Robert Markwick
See the file license.txt for copying permission

THIS DOCUMENT CONTAINS A LIST OF FUNCTIONS BUILT INTO XPINS

STRING FUNCITONS
X_PRINT(STR $A)
	Available in XPINS Parser: 0.9.0
	Description: Displays a string through std::cout
	Arguments: the string you want to display
	Return: NONE

TRIGONOMETRY

X_TSIN(NUM $A)
	Available in XPINS Parser: 0.2.0
	Description: Takes the sine of a given angle
	Arguments: The NUM representing the angle
	Return: NUM, returns the sine of the angle

X_TCOS(NUM $A)
	Available in XPINS Parser: 0.2.0
	Description: Takes the cosine of a given angle
	Arguments: The NUM representing the angle
	Return: NUM, returns the cosine of the angle
	
X_TTAN(NUM $A)
	Available in XPINS Parser: 0.2.0
	Description: Takes the tangent of a given angle
	Arguments: The NUM representing the angle
	Return: NUM, returns the tangent of the angle

X_TATAN(NUM $A, NUM $B)
	Available in XPINS Parser: 0.2.0
	Description: Gets the base angle given the two legs of a right triangle
	Arguments: The NUMs representing Y and X, repsectiely
	Return: NUM, returns the angle

X_VADDPOLAR(NUM $A, NUM $B)
	Available in XPINS Parser: 0.2.0
	Description: Adds two numbers such that the sum is in the range of [0,2PI)
	Arguments: The NUMs to be added
	Return: NUM, returns the modified sum of A and B
					

MISCILLANEOUS SCALAR MATH OPERATIONS

X_SQRT(NUM $A)
	Available in XPINS Parser: 0.10.0
	Description: Finds Square Root of A
	Arguments: The NUM to take the square root of.
	Return: NUM, returns the square root value of A.

X_ABS(NUM $A)
	Available in XPINS Parser: 0.10.0
	Description: Finds Absolute value of A
	Arguments: The NUM to take the absolute of.
	Return: NUM, returns the absolute value of A.

X_FLOOR(NUM $A)
	Available in XPINS Parser: 0.10.0
	Description: Floors a number to make it an integer
	Arguments: A is the number you would like to floor
	Return: NUM, returns the result of the floorign

X_LN(NUM $A)
	Available in XPINS Parser: 0.10.0
	Description: Evaluates natural log of A
	Arguments: The NUM to take the natural logarithm of.
	Return: NUM, returns the result of the logarithm

X_LOG(NUM $A, NUM $B)
	Available in XPINS Parser: 0.10.0
	Description: Evaluates log base B of A
	Arguments: A is the value and B is the Base.
	Return: NUM, returns the result of the logarithm

X_VDIST(NUM $A, NUM $B, NUM $C)
	Available in XPINS Parser: 0.2.0
	Description: Finds distance between two poNUMs given the components
	Arguments: The X, Y, and Z deltas
	Return: NUM, returns sqrt(x^2+y^2+z^2);


READING VECTOR COMPONENTS

X_VX(VEC $A)
	Available in XPINS Parser: 0.2.0
	Description: Gets the X component for a Vector
	Arguments: The vector for which the X component is desired
	Return: NUM, returns the X component of the vector

X_VY(VEC $A)
	Available in XPINS Parser: 0.2.0
	Description: Gets the Y component for a Vector
	Arguments: The vector for which the Y component is desired
	Return: NUM, returns the Y component of the vector

X_VZ(VEC $A)
	Available in XPINS Parser: 0.8.0
	Description: Gets the Z component for a Vector
	Arguments: The vector for which the Z component is desired
	Return: NUM, returns the Z component of the vector

X_VRHO(VEC $A)
	Available in XPINS Parser: 0.2.0
	Description: Gets the Magnitude (RHO) of a Vector
	Arguments: The vector for which the Magnitude is desired
	Return: NUM, returns the Magnitude of the vector
	
X_VR(VEC $A)
	Available in XPINS Parser: 0.8.0
	Description: Gets the Cylindrical R component of a Vector
	Arguments: The vector for which the Cylindrical R component is desired
	Return: NUM, returns the Cylindrical R component of the vector


X_VTHETA(VEC $A)
	Available in XPINS Parser: 0.2.0
	Description: Gets the THETA component of Vector
	Arguments: The vector for which the THETA component is desired
	Return: NUM, returns the THETA component of the vector

X_VPHI(VEC $A)
	Available in XPINS Parser: 0.8.0
	Description: Gets the PHI component for a Vector
	Arguments: The vector for which the PHI component is desired
	Return: NUM, returns the PHI component of the vector


VECTOR OPERATIONS

X_VPROJ(VEC $A, NUM $B)
	Available in XPINS Parser: 0.3.0
	Description: Finds the projection of a vector onto a generic vector in a given direction
	Arguments: The vector from whihc the projection is to be taken, and the direction of the result.
	Return: VEC, returns the projection of A onto a vector in direction.	Return: VEC, returns a vector in the same direction as A with the magnitude multiplied by B
	
X_VUNIT(VEC $A)
	Available in XPINS Parser: 0.11.0
	Description: Finds the unit vector for a given vector
	Arguments: The vector from whihc the projection is to be taken, and the direction of the result.
	Return: VEC, returns the projection of A onto a vector in direction.	Return: VEC, returns a vector in the same direction as A with the magnitude multiplied by B


X_VANG(VEC $A, VEC$B)
	Available in XPINS Parser: 0.2.0
	Description: Finds the angle between two vectors
	Arguments: The vectors for which you want to find the angle between
	Return: NUM, returns the Angle between the Vectors
	
MATRIX CREATION

X_MMAKE(NUM $A, NUM $B)
	Available in XPINS Parser: 0.9.0
	Description: Create a Zero Matrix
	Arguments: The number of rows and columns, respecitvely
	Return: MAT, returns a zero matrix of size AxB.
	
X_MID(NUM $A)
	Available in XPINS Parser: 0.9.0
	Description: Create an Identity Matrix of size A
	Arguments: The number of rows and columns.
	Return: MAT, returns a Identity matrix of size AxA.
	
X_MROT(NUM $A, VEC $B)
	Available in XPINS Parser: 0.9.0
	Description: Create an Rotation Matrix of A radians around B
	Arguments: A is the angle the Matrix will rotate a vector, and B is the vector that it should be rotated around
	Return: MAT, returns a Rotation matrix A radains around B.
	
	
MATRIX ACCESS

X_MGET(MAT $A, NUM $B, NUM$C)
	Available in XPINS Parser: 0.9.0
	Description: Gets a value from a Matrix
	Arguments: A is the matrix, B is the row, and C is the column
	Return: NUM, Value from A at B,C
	
X_MSET(MAT $A, NUM $B, NUM $C, NUM $D)
	Available in XPINS Parser: 0.9.0
	Description: Sets a value in a Matrix
	Arguments: A is the matrix, B is the new value, C is the row, and D is the column
	Return: NONE
	

MATRIX-VECTOR CONVERSTION


X_MMTV(MAT $A)
	Available in XPINS Parser: 0.9.0
	Description: Converts Matrix into Vector
	Arguments: The Matrix to be converted
	Return: VEC, Vector from Matrix A
	
X_MVTM(VEC $A)
	Available in XPINS Parser: 0.9.0
	Description: Converts Vector into Matrix
	Arguments: The Vector to be converted
	Return: MAT, Matrix from Vector A
	
	 
MATRIX OPERATIONS

X_MDET(MAT $A)
	Available in XPINS Parser: 0.9.0
	Description: Finds the determinant of a Matrix
	Arguments: The Matrix for which the determinant is desired
	Return: NUM, the Determinant of the Matrix
	
X_MINV(MAT $A)
	Available in XPINS Parser: 0.9.0
	Description: Finds the inverse of a Matrix
	Arguments: The Matrix for which the inverse is desired
	Return: MAT, the inverse of the Matrix
	
X_MTRANS(MAT $A)
	Description: Finds the transposition of a Matrix
	Arguments: The Matrix for which the transposition is desired
	Return: NUM, the transposition of the Matrix



PROBABILITY: RANDOM VALUES

X_PBERN(NUM $A)
	Available in XPINS Parser: 0.9.0
	Description: Generates a True or False from an Bernoulli Random Variable
	Arguments: A is the probability that the number is one.
	Return: BOOL, T if the random variable is 1 and F if it is zero

X_PRAND(NUM $A, NUM$B)
	Available in XPINS Parser: 0.2.0
	Description: Generates a random number from a Uniform Random Variable
	Arguments: A is the lower bound and B is the upper bound
	Return: NUM, returns a random number between A and B


X_PNORMAL(NUM $A,NUM $B)
	Available in XPINS Parser: 0.10.0
	Description: Generates a random number from a Normal Random Variable
	Arguments: A is the Mean, and B is the Standard Deviation
	Return: NUM, the Random Number
	
X_PEXP(NUM $A)
	Available in XPINS Parser: 0.9.0
	Description: Generates a random number from an Exponantial Random Variable
	Arguments: A is the Parameter
	Return: NUM, the Random Number
	
X_PPOISSON(NUM $A)
	Available in XPINS Parser: 0.9.0
	Description: Generates a random number from an Poisson Random Variable
	Arguments: A is the Parameter
	Return: NUM, the Random Number
	

PROBABILITY: EXPERIMENTS:

X_PCOIN(NUM $A, NUM $B)
	Available in XPINS Parser: 0.11.0
	Description: Simulates flipping B coins of bias A
	Arguments: A is the probability of heads for a given flip. B is the number of flips.
	Return: NUM, total number of heads

X_PDICE(NUM $A, NUM $B)
	Available in XPINS Parser: 0.11.0
	Description: Rolls B A-sided fair dice
	Arguments: A is the number of sides, B is the number of rolls.
	Return: NUM, returns a random number between A and B


PROBABILITY: MARKOV CHAINS:

X_PMSIM(MAT $A, NUM $B, NUM $C)
	Available in XPINS Parser: 0.11.0
	Description: Simulates Markov Chain A for B steps starting in state C
	Arguments: A is the transition probability Matrix (column in row out), B is the number of steps, C is the starting state
	Return: NUM, a random stage weighted on probability of being in that state after B steps

X_PMPROB(MAT $A, NUM $B, NUM $C, NUM $D)
	Available in XPINS Parser: 0.11.0
	Description: Calculates B-Step transition Probability
	Arguments: A is the transition probability Matrix, B is the number of steps, C is the starting state, D is the end State
	Return: NUM, probability fo being in state D after B steps.
	
X_PMSTEADYSTATE(MAT $A, NUM $B)
	Available in XPINS Parser: 0.11.0
	Description: Calculates Steady-State Probability
	Arguments: A is the transition probability Matrix, B is the state
	Return: NUM, probability fo being in state B after a long time.

X_PMREACHABLE(MAT $A, NUM $B, NUM $C)
	Available in XPINS Parser: 0.11.0
	Description: Can state B be reached from state C
	Arguments: A is the transition probability Matrix, B is the final state, C is the initial stae
	Return: BOOL, TRUE if and only if state B can be arrived at given initial state C

X_PMABSORBPROB(MAT $A, NUM $B, NUM $C)
	Available in XPINS Parser: 0.11.0
	Description: Calculates Steady-State Probability given initial state C
	Arguments: A is the transition probability Matrix, B is the absorbing state, C is the initial stae
	Return: NUM, probability fo being in state B after a long time.

X_PMABSORBTIME(MAT $A, NUM $B, NUM $C)
	Available in XPINS Parser: 0.11.0
	Description: Calculates Expected Absorbtion time for State B
	Arguments: A is the transition probability Matrix, B is the absorbing state, C is the initial stae
	Return: NUM, Expected time to reach state B from state C.
	
X_PMABSORBSIM(MAT $A, NUM $B, NUM $C)
	Available in XPINS Parser: 0.11.0
	Description: Simulates Absorbtion time for State B
	Arguments: A is the transition probability Matrix, B is the absorbing state, C is the initial stae
	Return: NUM, A possible time to reach state B from state C.


POLYNOMIALS: CALCULUS

X_ADERIVE(POLY $A,NUM $B)
	Available in XPINS Parser: 0.11.0
	Description: Takes the derivative of A with respect to the variable at index B;
	Arguments: A is the Polynomial, B is the index of the Variable
	Return: POLY, the Derivative
	
X_AINTEGRATE(POLY $A)
	Available in XPINS Parser: 0.11.0
	Description: Finds the Integral of A with respect to the variable at index B;
	Arguments: A is the Polynomial, B is the index of the Variable
	Return: POLY, the Indefinite Integaral
