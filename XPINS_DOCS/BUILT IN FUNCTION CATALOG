Copyright (c) 2013 Robert Markwick
See the file license.txt for copying permission

THIS DOCUMENT CONTAINS A LIST OF FUNCTIONS BUILT INTO XPINS

STRING FUNCITONS
X_PRINT(STR $A)
	Available in XPINS Parser: 0.9.0
	Description: Displays a string through std::cout
	Arguments: the string you want to display
	Return: NONE

TRIGONOMETRY

X_SIN(NUM $A)
	Available in XPINS Parser: 0.2.0
	Description: Takes the sine of a given angle
	Arguments: The NUM representing the angle
	Return: NUM, returns the sine of the angle

X_COS(NUM $A)
	Available in XPINS Parser: 0.2.0
	Description: Takes the cosine of a given angle
	Arguments: The NUM representing the angle
	Return: NUM, returns the cosine of the angle
	
X_TAN(NUM $A)
	Available in XPINS Parser: 0.2.0
	Description: Takes the tangent of a given angle
	Arguments: The NUM representing the angle
	Return: NUM, returns the tangent of the angle

X_ATAN(NUM $A, NUM $B)
	Available in XPINS Parser: 0.2.0
	Description: Gets the base angle given the two legs of a right triangle
	Arguments: The NUMs representing Y and X, repsectiely
	Return: NUM, returns the angle

X_ADDPOLAR(NUM $A, NUM $B)
	Available in XPINS Parser: 0.2.0
	Description: Adds two numbers such that the sum is in the range of [0,2PI)
	Arguments: The NUMs to be added
	Return: NUM, returns the modified sum of A and B
					

MISCILLANEOUS SCALAR MATH OPERATIONS

X_SQRT(NUM $A)
	Available in XPINS Parser: 0.10.0
	Description: Finds Square Root of A
	Arguments: The NUM to take the square root of.
	Return: NUM, returns the square root value of A.

X_ABS(NUM $A)
	Available in XPINS Parser: 0.10.0
	Description: Finds Absolute value of A
	Arguments: The NUM to take the absolute of.
	Return: NUM, returns the absolute value of A.

X_FLOOR(NUM $A)
	Available in XPINS Parser: 0.10.0
	Description: Floors a number to make it an integer
	Arguments: A is the number you would like to floor
	Return: NUM, returns the result of the floorign

X_LN(NUM $A)
	Available in XPINS Parser: 0.10.0
	Description: Evaluates natural log of A
	Arguments: The NUM to take the natural logarithm of.
	Return: NUM, returns the result of the logarithm

X_LOG(NUM $A, NUM $B)
	Available in XPINS Parser: 0.10.0
	Description: Evaluates log base B of A
	Arguments: A is the value and B is the Base.
	Return: NUM, returns the result of the logarithm

X_DIST(NUM $A, NUM $B, NUM $C)
	Available in XPINS Parser: 0.2.0
	Description: Finds distance between two poNUMs given the components
	Arguments: The X, Y, and Z deltas
	Return: NUM, returns sqrt(x^2+y^2+z^2);


READING VECTOR COMPONENTS

X_VX(VEC $A)
	Available in XPINS Parser: 0.2.0
	Description: Gets the X component for a Vector
	Arguments: The vector for which the X component is desired
	Return: NUM, returns the X component of the vector

X_VY(VEC $A)
	Available in XPINS Parser: 0.2.0
	Description: Gets the Y component for a Vector
	Arguments: The vector for which the Y component is desired
	Return: NUM, returns the Y component of the vector

X_VZ(VEC $A)
	Available in XPINS Parser: 0.8.0
	Description: Gets the Z component for a Vector
	Arguments: The vector for which the Z component is desired
	Return: NUM, returns the Z component of the vector

X_VMAG(VEC $A)
	Available in XPINS Parser: 0.2.0
	Description: Gets the Magnitude (RHO) of a Vector
	Arguments: The vector for which the Magnitude is desired
	Return: NUM, returns the Magnitude of the vector
	
X_VR(VEC $A)
	Available in XPINS Parser: 0.8.0
	Description: Gets the Cylindrical R component of a Vector
	Arguments: The vector for which the Cylindrical R component is desired
	Return: NUM, returns the Cylindrical R component of the vector


X_VTHETA(VEC $A)
	Available in XPINS Parser: 0.8.0
	Description: Gets the THETA component of Vector
	Arguments: The vector for which the THETA component is desired
	Return: NUM, returns the THETA component of the vector

X_VPHI(VEC $A)
	Available in XPINS Parser: 0.8.0
	Description: Gets the PHI component for a Vector
	Arguments: The vector for which the PHI component is desired
	Return: NUM, returns the PHI component of the vector


VECTOR OPERATIONS

X_VPROJECT(VEC $A, VEC $B)
	Available in XPINS Parser: 0.12.0
	Description: Finds the projection of a vector onto another Vector
	Arguments: The vector that is being projected and the vector being projected onto, respectively
	Return: VEC, returns the projection of A onto B.
	
X_UNIT_VECTOR(VEC $A)
	Available in XPINS Parser: 0.12.0
	Description: Finds the unit vector for a given vector
	Arguments: The vector for which the unit vector is desired.
	Return: VEC, returns the Unit Vector in the direcion of A

X_VECTOR_ANGLE(VEC $A, VEC$B)
	Available in XPINS Parser: 0.12.0
	Description: Finds the angle between two vectors
	Arguments: The vectors for which you want to find the angle between
	Return: NUM, returns the Angle between the Vectors
	
	
QUATERNION COMPONENTS

X_QR(QUAT $A)
	Available in XPINS Parser: 0.12.0
	Description: Gets the Scalar component for a Quaternion
	Arguments: The Quaternion for which the scalar component is desired
	Return: NUM, returns the scalar component of the quaternion

X_QV(QUAT $A)
	Available in XPINS Parser: 0.12.0
	Description: Gets the vector component for a Quaternion
	Arguments: The Quaternion for which the vector component is desired
	Return: NUM, returns the vector component of the quaternion

X_VMAG(VEC $A)
	Available in XPINS Parser: 0.12.0
	Description: Gets the Magnitude of a Quatrernion
	Arguments: The quaternion for which the Magnitude is desired
	Return: NUM, returns the Magnitude of the quaternion
	

QUATERNION OPERATIONS

X_QUATERNION_CONJUGATE(QUAT $A)
	Available in XPINS Parser: 0.12.0
	Description: Finds the conjugate of a quaternion
	Arguments: The Quaternion for which the conjugate is desired
	Return: QUAT, returns the conjugate of A
	
X_QUATERNION_INVERSE(QUAT $A)
	Available in XPINS Parser: 0.12.0
	Description: Finds the inverse of a quaternion
	Arguments: The Quaternion for which the inverse is desired
	Return: QUAT, returns the inverse of A

X_UNIT_QUATERNION(VEC $A)
	Available in XPINS Parser: 0.12.0
	Description: Finds the unit quaternion for a given quaternion
	Arguments: The quaternion for whihc the unit quaternion is desired.
	Return: QUAT, returns the Unit quaternion in the direcion of A


X_QUATERNION_ROTATE(QUAT $A, VEC$B)
	Available in XPINS Parser: 0.2.0
	Description: Rotates a vector according to a quaternion
	Arguments: The quaternion and the vector
	Return: VEC, returns the rotated vector
	

MATRIX CREATION

X_ZERO_MATRIX(NUM $A, NUM $B)
	Available in XPINS Parser: 0.9.0
	Description: Create a Zero Matrix
	Arguments: The number of rows and columns, respecitvely
	Return: MAT, returns a zero matrix of size AxB.
	
X_IDENTITY_MATRIX(NUM $A)
	Available in XPINS Parser: 0.9.0
	Description: Create an Identity Matrix of size A
	Arguments: The number of rows and columns.
	Return: MAT, returns a Identity matrix of size AxA.
	
X_ROTATION_MATRIX(NUM $A, VEC $B)
	Available in XPINS Parser: 0.9.0
	Description: Create an Rotation Matrix of A radians around B
	Arguments: A is the angle the Matrix will rotate a vector, and B is the vector that it should be rotated around
	Return: MAT, returns a Rotation matrix A radains around B.
	
X_EULER_ANGLE_MATRIX(NUM $A, NUM $B, NUM$C)
	Available in XPINS Parser: 0.9.0
	Description: Create an Rotation Matrix using Euler Angles (roll around X, then pitch around Y, then yaw around z)
	Arguments: A is Roll, B is Pitch, and C is Yaw
	Return: MAT, returns a Rotation matrix from Euler Angles A, B, and C
	
X_QUATERNION_MATRIX(QUAT $A)
	Available in XPINS Parser: 0.9.0
	Description: Create an Rotation Matrix from a Quaternion
	Arguments: A is the Quaternion used to create the Matrix 
	Return: MAT, returns a Rotation matrix based on A.
	
	
MATRIX ACCESS

X_MATRIX_GET(MAT $A, NUM $B, NUM$C)
	Available in XPINS Parser: 0.9.0
	Description: Gets a value from a Matrix
	Arguments: A is the matrix, B is the row, and C is the column
	Return: NUM, Value from A at B,C
	
X_MATRIX_SET(MAT $A, NUM $B, NUM $C, NUM $D)
	Available in XPINS Parser: 0.9.0
	Description: Sets a value in a Matrix
	Arguments: A is the matrix, B is the new value, C is the row, and D is the column
	Return: NONE
	
	 
MATRIX OPERATIONS

X_DETERMINANT(MAT $A)
	Available in XPINS Parser: 0.9.0
	Description: Finds the determinant of a Matrix
	Arguments: The Matrix for which the determinant is desired
	Return: NUM, the Determinant of the Matrix
	
X_ROW_ECHELON(MAT $A)
	Available in XPINS Parser: 0.12.0
	Description: Finds the row echelon form of a Matrix
	Arguments: The Matrix for which the row echelon form is desired
	Return: MAT, the row echelon from of the Matrix
	
X_REDUCED_ROW_ECHELON(MAT $A)
	Available in XPINS Parser: 0.12.0
	Description: Finds the reduced row echelon form of a Matrix
	Arguments: The Matrix for which the reduced row echelon form is desired
	Return: MAT, the reduced row echelon from of the Matrix

X_INVERT(MAT $A)
	Available in XPINS Parser: 0.9.0
	Description: Finds the inverse of a Matrix
	Arguments: The Matrix for which the inverse is desired
	Return: MAT, the inverse of the Matrix

	
X_TRANSPOSE(MAT $A)
	Description: Finds the transposition of a Matrix
	Arguments: The Matrix for which the transposition is desired
	Return: MAT, the transposition of the Matrix
	
X_TRANSPOSE(MAT $A, MAT $B)
	Description: Appends one matrix to another
	Arguments: A is left Matrix, B is right matrix
	Return: MAT, [A|B]



PROBABILITY: RANDOM VALUES

X_RV_BERNOULLI(NUM $A)
	Available in XPINS Parser: 0.9.0
	Description: Generates a True or False from an Bernoulli Random Variable
	Arguments: A is the probability that the number is one.
	Return: BOOL, T if the random variable is 1 and F if it is zero

X_RAND(NUM $A, NUM$B)
	Available in XPINS Parser: 0.2.0
	Description: Generates a random number from a Uniform Random Variable
	Arguments: A is the lower bound and B is the upper bound
	Return: NUM, returns a random number between A and B


X_RV_NORMAL(NUM $A,NUM $B)
	Available in XPINS Parser: 0.10.0
	Description: Generates a random number from a Normal Random Variable
	Arguments: A is the Mean, and B is the Standard Deviation
	Return: NUM, the Random Number
	
X_RV_EXP(NUM $A)
	Available in XPINS Parser: 0.9.0
	Description: Generates a random number from an Exponantial Random Variable
	Arguments: A is the Parameter
	Return: NUM, the Random Number
	
X_RV_POISSON(NUM $A)
	Available in XPINS Parser: 0.9.0
	Description: Generates a random number from an Poisson Random Variable
	Arguments: A is the Parameter
	Return: NUM, the Random Number
	

PROBABILITY: EXPERIMENTS:

X_COIN_FLIP(NUM $A, NUM $B)
	Available in XPINS Parser: 0.11.0
	Description: Simulates flipping B coins of bias A
	Arguments: A is the probability of heads for a given flip. B is the number of flips.
	Return: NUM, total number of heads

X_DICE_ROLL(NUM $A, NUM $B)
	Available in XPINS Parser: 0.11.0
	Description: Rolls B A-sided fair dice
	Arguments: A is the number of sides, B is the number of rolls.
	Return: NUM, returns a random number between A and B


PROBABILITY: MARKOV CHAINS:

X_MARKOV_SIM(MAT $A, NUM $B, NUM $C)
	Available in XPINS Parser: 0.11.0
	Description: Simulates Markov Chain A for B steps starting in state C
	Arguments: A is the transition probability Matrix (column in row out), B is the number of steps, C is the starting state
	Return: NUM, a random stage weighted on probability of being in that state after B steps

X_MARKOV_PROB(MAT $A, NUM $B, NUM $C, NUM $D)
	Available in XPINS Parser: 0.11.0
	Description: Calculates B-Step transition Probability
	Arguments: A is the transition probability Matrix, B is the number of steps, C is the starting state, D is the end State
	Return: NUM, probability fo being in state D after B steps.
	
X_MARKOV_STEADYSTATE(MAT $A, NUM $B)
	Available in XPINS Parser: 0.11.0
	Description: Calculates Steady-State Probability
	Arguments: A is the transition probability Matrix, B is the state
	Return: NUM, probability fo being in state B after a long time.

X_MARKOV_REACHABLE(MAT $A, NUM $B, NUM $C)
	Available in XPINS Parser: 0.11.0
	Description: Can state B be reached from state C
	Arguments: A is the transition probability Matrix, B is the final state, C is the initial stae
	Return: BOOL, TRUE if and only if state B can be arrived at given initial state C

X_MARKOV_ABSORB_PROB(MAT $A, NUM $B, NUM $C)
	Available in XPINS Parser: 0.11.0
	Description: Calculates Steady-State Probability given initial state C
	Arguments: A is the transition probability Matrix, B is the absorbing state, C is the initial stae
	Return: NUM, probability fo being in state B after a long time.

X_MARKOV_ABSORB_TIME(MAT $A, NUM $B, NUM $C)
	Available in XPINS Parser: 0.11.0
	Description: Calculates Expected Absorbtion time for State B
	Arguments: A is the transition probability Matrix, B is the absorbing state, C is the initial stae
	Return: NUM, Expected time to reach state B from state C.
	
X_MARKOV_ABSORB_SIM(MAT $A, NUM $B, NUM $C)
	Available in XPINS Parser: 0.11.0
	Description: Simulates Absorbtion time for State B
	Arguments: A is the transition probability Matrix, B is the absorbing state, C is the initial stae
	Return: NUM, A possible time to reach state B from state C.


CALCULUS:

X_DERIVE(POLY $A,NUM $B)
	Available in XPINS Parser: 0.11.0
	Description: Takes the derivative of A with respect to the variable at index B;
	Arguments: A is the Polynomial, B is the index of the Variable
	Return: POLY, the Derivative
	
X_INTEGRATE(POLY $A, NUM $B)
	Available in XPINS Parser: 0.11.0
	Description: Finds the Integral of A with respect to the variable at index B;
	Arguments: A is the Polynomial, B is the index of the Variable
	Return: POLY, the Indefinite Integaral
	
X_SCALAR_LINE_INTEGRAL(POLY $A, FIELD $B, POLY $C, POLY $D)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Line integral of a Polynomial
	Arguments: A is the Polynomial (in terms of X,Y,Z, and T), B is the curve (in terms of U and T),
				C and D are respectively the starting and stopping U bounds (in terms of T)
	Return: POLY, the Divergence of A

X_SCALAR_SURFACE_INTEGRAL(FIELD $A, FIELD $B, POLY $C, POLY $D, POLY $E, POLY $F)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Line integral of a Polynomial
	Arguments: A is the Polynomial (in terms of X,Y,Z, and T), B is the surface (in terms of U,V and T),
				C and D are respectively the starting and stopping U bounds (in terms of T),
				E and F are respectively the starting and stopping V bounds (in terms of U and T)
	Return: POLY, the Surface
	
X_VOLUME_INTEGRAL(FIELD $A, FIELD $B, POLY $C, POLY $D, POLY $E, POLY $F, POLY $G, POLY $H)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Line integral of a Polynomial
	Arguments: A is the Polynomial (in terms of X,Y,Z, and T), B is the map vector (in terms of U,V,W and T),
				C and D are respectively the starting and stopping U bounds (in terms of T),
				E and F are respectively the starting and stopping V bounds (in terms of U and T)
				G and H are respectively the starting and stopping W bounds (in terms of U,V, andT)
	Return: POLY, the Surface

X_VECTOR_DERIVE(FIELD $A,NUM $B)
	Available in XPINS Parser: 0.11.0
	Description: Takes the derivative of A with respect to the variable at index B;
	Arguments: A is the Vector Field, B is the index of the Variable
	Return: FIELD, the Derivative
	
X_VECTOR_INTEGRATE(FIELD $A, NUM $B)
	Available in XPINS Parser: 0.11.0
	Description: Finds the Integral of A with respect to the variable at index B;
	Arguments: A is the Vector Field, B is the index of the Variable
	Return: FIELD, the Indefinite Integaral
	

VECTOR CALCULUS:

X_GRADIENT_VECTOR(POLY $A)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Gradient of A
	Arguments: A is a Polynomial
	Return: FIELD, the Gradient Vector Field of A

X_DIVERGENCE(FIELD $A)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Divergence of A
	Arguments: A is a Vector Field
	Return: POLY, the Divergence of A


X_DIVERGENCE(FIELD $A)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Divergence of A
	Arguments: A is a Vector Field
	Return: POLY, the Divergence of A

X_CURL(FIELD $A)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Curle of A
	Arguments: A is a Vector Field
	Return: FIELD, the Curle of A

X_VECTOR_LINE_INTEGRAL(FIELD $A, FIELD $B, POLY $C, POLY $D)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Line integral of a Vector Field
	Arguments: A is the field (in terms of X,Y,Z, and T), B is the curve (in terms of U and T),
				C and D are respectively the starting and stopping U bounds (in terms of T)
	Return: POLY, the Divergence of A
	
X_VECTOR_SURFACE_INTEGRAL(FIELD $A, FIELD $B, POLY $C, POLY $D, POLY $E, POLY $F)
	Available in XPINS Parser: 0.12.0
	Description: Takes the Surface integral of a Vector Field
	Arguments: A is the field (in terms of X,Y,Z, and T), B is the surface (in terms of U,V and T),
				C and D are respectively the starting and stopping U bounds (in terms of T),
				E and F are respectively the starting and stopping V bounds (in terms of U and T)
	Return: POLY, the Surface Integral
